// This file is auto-generated by @hey-api/openapi-ts
/**
 * The types of auth errors that can occur, this is used for {@link AuthErrorResponseContent.message}
 */
export enum AuthErrorTypes {
    NOT_AUTHENTICATED = 'Not Authenticated',
    NOT_AUTHORIZED = 'Not Authorized',
    SECURITY_FAILURE = 'Security Failure'
}
/**
 * This is the content of an {@link AuthErrorResponseBody.errors}
 */
export type AuthErrorResponseContent = {
    message: AuthErrorTypes;
    details?: string;
};
/**
 * Constant literal type for {@link AuthErrorResponseBody.message}
 */
export enum AuthErrorBodyMessageT {
    AUTH_ERROR = 'Auth Error'
}
/**
 * Represents the response body of an error response
 */
export type AuthErrorResponseBody = {
    errors: Array<AuthErrorResponseContent>;
    message: AuthErrorBodyMessageT;
};
/**
 * Validation error description.
 */
export type ValidationError = {
    /**
     * Object that was validated.
     *
     * OPTIONAL - configurable via the ValidatorOptions.validationError.target option
     */
    target?: {
        [key: string]: unknown;
    };
    /**
     * Object's property that haven't pass validation.
     */
    property: string;
    /**
     * Value that haven't pass a validation.
     *
     * OPTIONAL - configurable via the ValidatorOptions.validationError.value option
     */
    value?: unknown;
    /**
     * Constraints that failed validation with error messages.
     */
    constraints?: {
        [key: string]: (string);
    };
    /**
     * Contains all nested validation errors of the property.
     */
    children?: Array<ValidationError>;
    contexts?: {
        [key: string]: unknown;
    };
};
export type FieldErrors = {
    [key: string]: {
        value?: unknown;
        message: string;
    };
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_ValidationErrorItem_instance_ = {
    /**
     * The type/origin of the validation error
     */
    type: ('notNull violation' | 'unique violation' | 'Validation error') | null;
    /**
     * The field that triggered the validation error
     */
    path: (string) | null;
    /**
     * The value that generated the error
     */
    value: unknown;
    origin: ('CORE' | 'DB' | 'FUNCTION' | 'DATATYPE') | null;
    /**
     * A validation "key", used for identification
     */
    validatorKey: (string) | null;
    /**
     * Property name of the BUILT-IN validator function that caused the validation error (e.g. "in" or "len"), if applicable
     */
    validatorName: (string) | null;
    /**
     * Parameters used with the BUILT-IN validator function, if applicable
     */
    validatorArgs: Array<unknown>;
    name: string;
    message: string;
    stack?: string;
    cause?: unknown;
};
/**
 * The type/origin of the validation error
 */
export enum type {
    NOT_NULL_VIOLATION = 'notNull violation',
    UNIQUE_VIOLATION = 'unique violation',
    VALIDATION_ERROR = 'Validation error'
}
export enum origin {
    CORE = 'CORE',
    DB = 'DB',
    FUNCTION = 'FUNCTION',
    DATATYPE = 'DATATYPE'
}
/**
 * This is the types acceptable for {@link ValidationErrorResponseContent.expandedDetails}
 * Differs between class-validator, TSOA or Sequelize - Typesript struggles with TModelAttributes from ValidationErrorItem.model
 */
export type ValidationErrorDetailsTypes = Array<ValidationError> | FieldErrors | Array<Omit_ValidationErrorItem_instance_>;
/**
 * Represents the content for {@link ValidationErrorResponseBody.errors}
 */
export type ValidationErrorResponseContent = {
    details: string;
    message: string;
    expandedDetails?: ValidationErrorDetailsTypes;
};
/**
 * This is the fixed literal type for {@link ValidationErrorResponseBody.message}
 */
export enum ValidationErrorMessageT {
    VALIDATION_FAILED = 'Validation Failed'
}
/**
 * Represents the response body of an error response
 */
export type ValidationErrorResponseBody = {
    errors: Array<ValidationErrorResponseContent>;
    message: ValidationErrorMessageT;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ = {
    updatedAt?: Date;
    firstName: string;
    lastName: string;
    email: string;
    profileImageURL?: string;
    profileText?: string;
    fullName?: string;
    isAdmin?: boolean;
    isStaff?: boolean;
    id: number;
    createdAt: Date;
};
export type TransformKeys_UserModelDTO_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofUserModelDTO__never_ = Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export type ReadResponseContent_UserModelDTO_password_never_ = Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
/**
 * The value of {@link DataResponseBody.message} for `get` and `getAll` route success
 */
export enum FoundResponseMessageT {
    FOUND = 'Found'
}
/**
 * Represents metadata for the data returned
 */
export type MetaData_User_ = {
    dataType: 'User';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType {
    USER = 'User'
}
/**
 * Represents the response body of a data response
 */
export type GetAllUsersResponse = {
    data: Array<Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_User_;
};
/**
 * Possible values for the filter query paramater on controller routes
 */
export enum OrderByFieldValues {
    CREATED_AT = 'createdAt',
    UPDATED_AT = 'updatedAt',
    _CREATED_AT = '-createdAt',
    _UPDATED_AT = '-updatedAt'
}
/**
 * The type of {@link NotFoundErrorsType.message } for not found responses
 */
export type NotFoundDetailedMessageT = string;
/**
 * The type of {@link ErrorResponseBody.errors} for not found responses
 */
export type NotFoundResponseContent = {
    message: NotFoundDetailedMessageT;
};
/**
 * The {@link ErrorResponseBody.message} for not found responses
 */
export enum NotFoundMessageT {
    NOT_FOUND = 'Not Found'
}
/**
 * Represents the response body of an error response
 */
export type NotFoundResponseBody = {
    errors: Array<NotFoundResponseContent>;
    message: NotFoundMessageT;
};
/**
 * Response type for this controllers object not found response
 */
export type UserNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetUserResponse = {
    data: Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_User_;
};
/**
 * This is the type of {@link AppModel.id} - used to ensure its correct when used in routers etc.
 */
export type AppModelIdT = number;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__ = {
    firstName: string;
    lastName: string;
    email: string;
    profileImageURL?: string;
    profileText?: string;
    fullName?: string;
    isAdmin?: boolean;
    isStaff?: boolean;
    id: number;
    createdAt: Date;
};
export type TransformKeys_UserModelDTO_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofUserModelDTO__never_ = Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__;
export type CreateResponseContent_UserModelDTO_password_never_ = Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__;
/**
 * The value of {@link DataResponseBody.message} for `create` route success
 */
export enum CreatedResponseMessageT {
    CREATED = 'Created'
}
/**
 * Represents the response body of a data response
 */
export type CreateUserResponse = {
    data: Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_User_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__ = {
    password: string;
    firstName: string;
    lastName: string;
    email: string;
    profileImageURL?: string;
    profileText?: string;
};
export type TransformKeys_UserModelDTO_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__profileImageURL_never_ = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__;
export type CreateRequestBody_UserModelDTO_isAdmin_or_isStaff_or_fullName_profileImageURL_ = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__;
/**
 * Request body format for {@link UserController.createUser}'s `user` body parameter
 */
export type UserCreateRequest = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__ = {
    updatedAt: Date;
    firstName: string;
    lastName: string;
    email: string;
    profileImageURL?: string;
    profileText?: string;
    fullName?: string;
    isAdmin?: boolean;
    isStaff?: boolean;
    id: number;
    createdAt: Date;
};
export type TransformKeys_UserModelDTO_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__never_never_ = Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__;
export type UpdateResponseContent_UserModelDTO_password_never_ = Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__;
/**
 * The value of {@link DataResponseBody.message} for `update` route success
 */
export enum UpdatedResponseMessageT {
    UPDATED = 'Updated'
}
/**
 * Represents the response body of a data response
 */
export type UpdateUserResponse = {
    data: Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_User_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_UpdateRequestBodyOmittedKeysT_keyofUserModelDTO__ = {
    password?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    profileImageURL?: string;
    profileText?: string;
};
export type TransformKeys_Partial_UserModelDTO__Extract_isAdmin_or_isStaff_or_fullName_or_UpdateRequestBodyOmittedKeysT_keyofUserModelDTO__profileText_never_ = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_UpdateRequestBodyOmittedKeysT_keyofUserModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_UserModelDTO_isAdmin_or_isStaff_or_fullName_profileText_ = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_UpdateRequestBodyOmittedKeysT_keyofUserModelDTO__;
/**
 * Request body format for {@link UserController.updateUser}'s `user` body parameter
 */
export type UserUpdateRequest = UpdateRequestBody_UserModelDTO_isAdmin_or_isStaff_or_fullName_profileText_;
/**
 * Represents {@link DeleteResponseBody.data}
 */
export type DeletedResponseContent = {
    id: number;
};
/**
 * The value of {@link DataResponseBody.message} for `delete` route success
 */
export enum DeletedResponseMessageT {
    DELETED = 'Deleted'
}
/**
 * Represents the response body of a data response
 */
export type DeleteUserResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_User_;
};
export type ReadResponseContent_UserModelDTO_password_ = Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
/**
 * OAuth2 Response Body compliant with RFC6749 = https://www.rfc-editor.org/rfc/rfc6749#section-4.2.2
 */
export type LoginResponse = {
    access_token: string;
    token_type: 'Bearer' | 'bearer';
    expires_in: (string | number);
    user: Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
};
export enum token_type {
    BEARER = 'bearer'
}
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ = {
    firstName: string;
    lastName: string;
    email: string;
    profileImageURL?: string;
    profileText?: string;
    fullName?: string;
    isAdmin?: boolean;
    isStaff?: boolean;
    id: number;
    createdAt: Date;
};
export type TransformKeys_UserModelDTO_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofUserModelDTO__never_ = Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export type ReadResponseContent_UserModelDTO_password_or_updatedAt_ = Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
/**
 * Represents the response body of a data response
 */
export type RegisterResponse = {
    data: Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_User_;
};
/**
 * Request body format for {@link AuthController.register}'s `blog` body parameter
 */
export type AuthRegisterRequestBody = Omit_any_Extract_isAdmin_or_isStaff_or_fullName_or_CreateRequestBodyOmittedKeysT_keyofUserModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ = {
    name: string;
    updatedAt?: Date;
    id: number;
    createdAt: Date;
    cssColour: string;
};
export type TransformKeys_TagModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofTagModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__;
export type ReadResponseContent_TagModelDTO_never_never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_Tag_ = {
    dataType: 'Tag';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType2 {
    TAG = 'Tag'
}
/**
 * Represents the response body of a data response
 */
export type GetAllTagsResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_Tag_;
};
/**
 * Response type for this controllers object not found response
 */
export type TagNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetTagResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_Tag_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__ = {
    name: string;
    id: number;
    createdAt: Date;
    cssColour: string;
};
export type TransformKeys_TagModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofTagModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__;
export type CreateResponseContent_TagModelDTO_never_never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateTagResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_Tag_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofTagModelDTO__ = {
    name: string;
    cssColour: string;
};
export type TransformKeys_TagModelDTO_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofTagModelDTO__never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofTagModelDTO__;
export type CreateRequestBody_TagModelDTO_never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofTagModelDTO__;
/**
 * Request body format for {@link TagController.createTag}'s `tag` body parameter
 */
export type TagCreateRequest = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofTagModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__ = {
    name: string;
    updatedAt: Date;
    id: number;
    createdAt: Date;
    cssColour: string;
};
export type TransformKeys_TagModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__;
export type UpdateResponseContent_TagModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateTagResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_Tag_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofTagModelDTO__ = {
    name?: string;
    cssColour?: string;
};
export type TransformKeys_Partial_TagModelDTO__Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofTagModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofTagModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_TagModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofTagModelDTO__;
/**
 * Request body format for {@link TagController.updateTag}'s `tag` body parameter
 */
export type TagUpdateRequest = UpdateRequestBody_TagModelDTO_never_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteTagResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_Tag_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ = {
    name: string;
    updatedAt?: Date;
    id: number;
    createdAt: Date;
};
export type TransformKeys_RoleModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofRoleModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type ReadResponseContent_RoleModelDTO_never_never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_Role_ = {
    dataType: 'Role';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType3 {
    ROLE = 'Role'
}
/**
 * Represents the response body of a data response
 */
export type GetAllRolesResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_Role_;
};
/**
 * Response type for this controllers object not found response
 */
export type RoleNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetRoleResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_Role_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__ = {
    name: string;
    id: number;
    createdAt: Date;
};
export type TransformKeys_RoleModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofRoleModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type CreateResponseContent_RoleModelDTO_never_never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateRoleResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_Role_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofRoleModelDTO__ = {
    name: string;
};
export type TransformKeys_RoleModelDTO_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofRoleModelDTO__never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofRoleModelDTO__;
export type CreateRequestBody_RoleModelDTO_never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofRoleModelDTO__;
/**
 * Request body format for {@link RoleController.createRole}'s `role` body parameter
 */
export type RoleCreateRequest = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofRoleModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__ = {
    name: string;
    updatedAt: Date;
    id: number;
    createdAt: Date;
};
export type TransformKeys_RoleModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type UpdateResponseContent_RoleModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateRoleResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_Role_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofRoleModelDTO__ = {
    name?: string;
};
export type TransformKeys_Partial_RoleModelDTO__Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofRoleModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofRoleModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_RoleModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofRoleModelDTO__;
/**
 * Request body format for {@link RoleController.updateRole}'s `role` body parameter
 */
export type RoleUpdateRequest = UpdateRequestBody_RoleModelDTO_never_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteRoleResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_Role_;
};
/**
 * Represents a non-empty string
 */
export type NonEmptyString = string;
/**
 * Construct a type with a set of properties K of type T
 */
export type Record_string_boolean_ = {
    [key: string]: (boolean);
};
/**
 * DTO Model for Sequalize Model {@link data /models/models.UserModel}
 */
export type UserModelDTO = {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    deletedAt?: Date;
    '#shouldValidate'?: Record_string_boolean_;
    firstName: NonEmptyString;
    lastName: NonEmptyString;
    email: NonEmptyString;
    password: NonEmptyString;
    profileImageURL?: string;
    profileText?: string;
    fullName?: string;
    isAdmin?: boolean;
    isStaff?: boolean;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ = {
    updatedAt?: Date;
    id: number;
    createdAt: Date;
    authorName?: string;
    title: string;
    content: string;
    isPublic: boolean;
    userId?: number;
    user?: UserModelDTO;
};
export type TransformKeys_FeedbackModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofFeedbackModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type ReadResponseContent_FeedbackModelDTO_never_never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_Feedback_ = {
    dataType: 'Feedback';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType4 {
    FEEDBACK = 'Feedback'
}
/**
 * Represents the response body of a data response
 */
export type GetAllFeedbacksResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_Feedback_;
};
/**
 * Response type for this controllers object not found response
 */
export type FeedbackNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetFeedbackResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_Feedback_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ = {
    id: number;
    createdAt: Date;
    authorName?: string;
    title: string;
    content: string;
    isPublic: boolean;
    userId?: number;
    user?: UserModelDTO;
};
export type TransformKeys_FeedbackModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofFeedbackModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type CreateResponseContent_FeedbackModelDTO_never_never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateFeedbackResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_Feedback_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__ = {
    authorName?: string;
    title: string;
    content: string;
    isPublic?: boolean;
    userId?: number;
    user?: UserModelDTO;
};
export type TransformKeys_FeedbackModelDTO_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__isPublic_or_userId_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__;
export type CreateRequestBody_FeedbackModelDTO_never_isPublic_or_userId_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Request body format for {@link FeedbackController.createFeedback}'s `feedback` body parameter
 */
export type FeedbackCreateRequest = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ = {
    updatedAt: Date;
    id: number;
    createdAt: Date;
    authorName?: string;
    title: string;
    content: string;
    isPublic: boolean;
    userId?: number;
    user?: UserModelDTO;
};
export type TransformKeys_FeedbackModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type UpdateResponseContent_FeedbackModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateFeedbackResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_Feedback_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__ = {
    authorName?: string;
    title?: string;
    content?: string;
    isPublic?: boolean;
    userId?: number;
    user?: UserModelDTO;
};
export type TransformKeys_Partial_FeedbackModelDTO__Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_FeedbackModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofFeedbackModelDTO__;
/**
 * Request body format for {@link FeedbackController.updateFeedback}'s `feedback` body parameter
 */
export type FeedbackUpdateRequest = UpdateRequestBody_FeedbackModelDTO_never_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteFeedbackResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_Feedback_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ = {
    name: string;
    updatedAt?: Date;
    id: number;
    createdAt: Date;
    description: string;
    price: number;
};
export type TransformKeys_BookingTypeModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofBookingTypeModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type ReadResponseContent_BookingTypeModelDTO_never_never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_BookingType_ = {
    dataType: 'BookingType';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType5 {
    BOOKING_TYPE = 'BookingType'
}
/**
 * Represents the response body of a data response
 */
export type GetAllBookingTypesResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_BookingType_;
};
/**
 * Response type for this controllers object not found response
 */
export type BookingTypeNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetBookingTypeResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_BookingType_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ = {
    name: string;
    id: number;
    createdAt: Date;
    description: string;
    price: number;
};
export type TransformKeys_BookingTypeModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofBookingTypeModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type CreateResponseContent_BookingTypeModelDTO_never_never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateBookingTypeResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_BookingType_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__ = {
    name: string;
    description: string;
    price: number;
};
export type TransformKeys_BookingTypeModelDTO_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__;
export type CreateRequestBody_BookingTypeModelDTO_never_never_ = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Request body format for {@link BookingTypeController.createBookingType}'s `bookingType` body parameter
 */
export type BookingTypeCreateRequest = Omit_any_Extract_never_or_CreateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ = {
    name: string;
    updatedAt: Date;
    id: number;
    createdAt: Date;
    description: string;
    price: number;
};
export type TransformKeys_BookingTypeModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type UpdateResponseContent_BookingTypeModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateBookingTypeResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_BookingType_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__ = {
    name?: string;
    description?: string;
    price?: number;
};
export type TransformKeys_Partial_BookingTypeModelDTO__Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_BookingTypeModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateRequestBodyOmittedKeysT_keyofBookingTypeModelDTO__;
/**
 * Request body format for {@link BookingTypeController.updateBookingType}'s `bookingType` body parameter
 */
export type BookingTypeUpdateRequest = UpdateRequestBody_BookingTypeModelDTO_never_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteBookingTypeResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_BookingType_;
};
/**
 * DTO Model for Sequalize Model {@link data /models/models.BookingTypeModel}
 */
export type BookingTypeModelDTO = {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    deletedAt?: Date;
    '#shouldValidate'?: Record_string_boolean_;
    name: NonEmptyString;
    description: NonEmptyString;
    price: number;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ = {
    updatedAt?: Date;
    id: number;
    createdAt: Date;
    userId: number;
    user?: UserModelDTO;
    bookingDate: Date;
    bookingNotes?: string;
    bookingTypeId: number;
    bookingType?: BookingTypeModelDTO;
};
export type TransformKeys_BookingModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__Extract_never_or_ReadResponseContentOptionalKeysT_keyofBookingModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type ReadResponseContent_BookingModelDTO_never_never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_Booking_ = {
    dataType: 'Booking';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType6 {
    BOOKING = 'Booking'
}
/**
 * Represents the response body of a data response
 */
export type GetAllBookingsResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_Booking_;
};
/**
 * Response type for this controllers object not found response
 */
export type BookingNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetBookingResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_Booking_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__ = {
    id: number;
    createdAt: Date;
    userId: number;
    user?: UserModelDTO;
    bookingDate: Date;
    bookingNotes?: string;
    bookingTypeId: number;
    bookingType?: BookingTypeModelDTO;
};
export type TransformKeys_BookingModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__Extract_never_or_CreateResponseContentOptionalKeysT_keyofBookingModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type CreateResponseContent_BookingModelDTO_never_never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateBookingResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_Booking_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_bookingType_or_CreateRequestBodyOmittedKeysT_keyofBookingModelDTO__ = {
    userId: number;
    user?: UserModelDTO;
    bookingDate: Date;
    bookingNotes?: string;
    bookingTypeId: number;
};
export type TransformKeys_BookingModelDTO_Extract_bookingType_or_CreateRequestBodyOmittedKeysT_keyofBookingModelDTO__never_never_ = Omit_any_Extract_bookingType_or_CreateRequestBodyOmittedKeysT_keyofBookingModelDTO__;
export type CreateRequestBody_BookingModelDTO_bookingType_never_ = Omit_any_Extract_bookingType_or_CreateRequestBodyOmittedKeysT_keyofBookingModelDTO__;
/**
 * Request body format for {@link BookingController.createBooking}'s `booking` body parameter
 */
export type BookingCreateRequest = Omit_any_Extract_bookingType_or_CreateRequestBodyOmittedKeysT_keyofBookingModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__ = {
    updatedAt: Date;
    id: number;
    createdAt: Date;
    userId: number;
    user?: UserModelDTO;
    bookingDate: Date;
    bookingNotes?: string;
    bookingTypeId: number;
    bookingType?: BookingTypeModelDTO;
};
export type TransformKeys_BookingModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type UpdateResponseContent_BookingModelDTO_never_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateBookingResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_Booking_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_bookingType_or_UpdateRequestBodyOmittedKeysT_keyofBookingModelDTO__ = {
    userId?: number;
    user?: UserModelDTO;
    bookingDate?: Date;
    bookingNotes?: string;
    bookingTypeId?: number;
};
export type TransformKeys_Partial_BookingModelDTO__Extract_bookingType_or_UpdateRequestBodyOmittedKeysT_keyofBookingModelDTO__never_never_ = Omit_any_Extract_bookingType_or_UpdateRequestBodyOmittedKeysT_keyofBookingModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_BookingModelDTO_bookingType_never_ = Omit_any_Extract_bookingType_or_UpdateRequestBodyOmittedKeysT_keyofBookingModelDTO__;
/**
 * Request body format for {@link BookingController.updateBooking}'s `booking` body parameter
 */
export type BookingUpdateRequest = UpdateRequestBody_BookingModelDTO_bookingType_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteBookingResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_Booking_;
};
/**
 * DTO Model for Sequalize Model {@link data /models/models.TagModel}
 */
export type TagModelDTO = {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    deletedAt?: Date;
    '#shouldValidate'?: Record_string_boolean_;
    name: NonEmptyString;
    cssColour: NonEmptyString;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ = {
    updatedAt?: Date;
    id: number;
    createdAt: Date;
    title: string;
    content: string;
    userId: number;
    user?: UserModelDTO;
    imageURL?: string;
    publishedDate?: Date;
    isPublished: boolean;
    tags?: Array<TagModelDTO>;
};
export type TransformKeys_BlogModelDTO_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__Extract_imageURL_or_publishedDate_or_ReadResponseContentOptionalKeysT_keyofBlogModelDTO__never_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate_ = Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__;
/**
 * Represents metadata for the data returned
 */
export type MetaData_Blog_ = {
    dataType: 'Blog';
    [key: string]: ((unknown | string) | null) | undefined;
};
export enum dataType7 {
    BLOG = 'Blog'
}
/**
 * Represents the response body of a data response
 */
export type GetAllBlogsResponse = {
    data: Array<Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__>;
    message: FoundResponseMessageT;
    metadata?: MetaData_Blog_;
};
/**
 * Response type for this controllers object not found response
 */
export type BlogNotFoundResponseBody = NotFoundResponseBody;
/**
 * Represents the response body of a data response
 */
export type GetBlogResponse = {
    data: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__;
    message: FoundResponseMessageT;
    metadata?: MetaData_Blog_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__ = {
    id: number;
    createdAt: Date;
    title: string;
    content: string;
    userId: number;
    user?: UserModelDTO;
    imageURL?: string;
    publishedDate?: Date;
    isPublished: boolean;
    tags?: Array<TagModelDTO>;
};
export type TransformKeys_BlogModelDTO_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__Extract_imageURL_or_publishedDate_or_CreateResponseContentOptionalKeysT_keyofBlogModelDTO__never_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type CreateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate_ = Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__;
/**
 * Represents the response body of a data response
 */
export type CreateBlogResponse = {
    data: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__;
    message: CreatedResponseMessageT;
    metadata?: MetaData_Blog_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_user_or_tags_or_CreateRequestBodyOmittedKeysT_keyofBlogModelDTO__ = {
    title: string;
    content: string;
    userId: number;
    imageURL?: string;
    publishedDate?: Date;
    isPublished: boolean;
};
export type TransformKeys_BlogModelDTO_Extract_user_or_tags_or_CreateRequestBodyOmittedKeysT_keyofBlogModelDTO__imageURL_or_publishedDate_never_ = Omit_any_Extract_user_or_tags_or_CreateRequestBodyOmittedKeysT_keyofBlogModelDTO__;
export type CreateRequestBody_BlogModelDTO_user_or_tags_imageURL_or_publishedDate_ = Omit_any_Extract_user_or_tags_or_CreateRequestBodyOmittedKeysT_keyofBlogModelDTO__;
/**
 * Request body format for {@link BlogController.createBlog}'s `blog` body parameter
 */
export type BlogCreateRequest = Omit_any_Extract_user_or_tags_or_CreateRequestBodyOmittedKeysT_keyofBlogModelDTO__;
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__ = {
    updatedAt: Date;
    id: number;
    createdAt: Date;
    title: string;
    content: string;
    userId: number;
    user?: UserModelDTO;
    imageURL?: string;
    publishedDate?: Date;
    isPublished: boolean;
    tags?: Array<TagModelDTO>;
};
export type TransformKeys_BlogModelDTO_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__imageURL_or_publishedDate_never_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type UpdateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate_ = Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__;
/**
 * Represents the response body of a data response
 */
export type UpdateBlogResponse = {
    data: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__;
    message: UpdatedResponseMessageT;
    metadata?: MetaData_Blog_;
};
/**
 * From T, pick a set of properties whose keys are in the union K
 */
export type Omit_any_Extract_user_or_tags_or_UpdateRequestBodyOmittedKeysT_keyofBlogModelDTO__ = {
    title?: string;
    content?: string;
    userId?: number;
    imageURL?: string;
    publishedDate?: Date;
    isPublished?: boolean;
};
export type TransformKeys_Partial_BlogModelDTO__Extract_user_or_tags_or_UpdateRequestBodyOmittedKeysT_keyofBlogModelDTO__never_never_ = Omit_any_Extract_user_or_tags_or_UpdateRequestBodyOmittedKeysT_keyofBlogModelDTO__;
/**
 * Represents the {@link DataResponseBody} for a successful `update` route response
 */
export type UpdateRequestBody_BlogModelDTO_user_or_tags_never_ = Omit_any_Extract_user_or_tags_or_UpdateRequestBodyOmittedKeysT_keyofBlogModelDTO__;
/**
 * Request body format for {@link BlogController.updateBlog}'s `blog` body parameter
 */
export type BlogUpdateRequest = UpdateRequestBody_BlogModelDTO_user_or_tags_never_;
/**
 * Represents the response body of a data response
 */
export type DeleteBlogResponse = {
    data: DeletedResponseContent;
    message: DeletedResponseMessageT;
    metadata?: MetaData_Blog_;
};
export type GetAllUsersData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a user and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllUsersError = (AuthErrorResponseBody | UserNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateUserData = {
    /**
     * - The posted body object, containing the creation attributes of UserModel
     */
    body: UserCreateRequest;
};
export type CreateUserError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetUserData = {
    path: {
        /**
         * - The identifier of the user to get
         */
        id: AppModelIdT;
    };
};
export type GetUserError = (AuthErrorResponseBody | UserNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateUserData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of UserModel
     */
    body: UserUpdateRequest;
    path: {
        /**
         * - The identifier of the user to update
         */
        id: AppModelIdT;
    };
};
export type UpdateUserError = (AuthErrorResponseBody | UserNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteUserData = {
    path: {
        /**
         * - The identifier of the user to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the user will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteUserError = (AuthErrorResponseBody | UserNotFoundResponseBody | ValidationErrorResponseBody);
export type LoginData = {
    body: {
        /**
         * - the OAuth2 username to try log in with, which is the email in this application
         */
        username: string;
        /**
         * - the password to try log in with
         */
        password: string;
    };
};
export type LoginError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type RegisterData = {
    /**
     * - The posted body object, containing the creation attributes of UserModel
     */
    body: AuthRegisterRequestBody;
};
export type RegisterError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetAllTagsData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a tag and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllTagsError = (AuthErrorResponseBody | TagNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateTagData = {
    /**
     * - The posted body object, containing the creation attributes of TagModel
     */
    body: TagCreateRequest;
};
export type CreateTagError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetTagData = {
    path: {
        /**
         * - The identifier of the tag to get
         */
        id: AppModelIdT;
    };
};
export type GetTagError = (AuthErrorResponseBody | TagNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateTagData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of TagModel
     */
    body: TagUpdateRequest;
    path: {
        /**
         * - The identifier of the tag to update
         */
        id: AppModelIdT;
    };
};
export type UpdateTagError = (AuthErrorResponseBody | TagNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteTagData = {
    path: {
        /**
         * - The identifier of the tag to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the tag will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteTagError = (AuthErrorResponseBody | TagNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllRolesData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a role and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllRolesError = (AuthErrorResponseBody | RoleNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateRoleData = {
    /**
     * - The posted body object, containing the creation attributes of RoleModel
     */
    body: RoleCreateRequest;
};
export type CreateRoleError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetRoleData = {
    path: {
        /**
         * - The identifier of the role to get
         */
        id: AppModelIdT;
    };
};
export type GetRoleError = (AuthErrorResponseBody | RoleNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateRoleData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of RoleModel
     */
    body: RoleUpdateRequest;
    path: {
        /**
         * - The identifier of the role to update
         */
        id: AppModelIdT;
    };
};
export type UpdateRoleError = (AuthErrorResponseBody | RoleNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteRoleData = {
    path: {
        /**
         * - The identifier of the role to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the role will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteRoleError = (AuthErrorResponseBody | RoleNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllFeedbacksData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a feedback and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllFeedbacksError = (AuthErrorResponseBody | FeedbackNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateFeedbackData = {
    /**
     * - The posted body object, containing the creation attributes of FeedbackModel
     */
    body: FeedbackCreateRequest;
};
export type CreateFeedbackError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetFeedbackData = {
    path: {
        /**
         * - The identifier of the feedback to get
         */
        id: AppModelIdT;
    };
};
export type GetFeedbackError = (AuthErrorResponseBody | FeedbackNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateFeedbackData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of FeedbackModel
     */
    body: FeedbackUpdateRequest;
    path: {
        /**
         * - The identifier of the feedback to update
         */
        id: AppModelIdT;
    };
};
export type UpdateFeedbackError = (AuthErrorResponseBody | FeedbackNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteFeedbackData = {
    path: {
        /**
         * - The identifier of the feedback to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the feedback will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteFeedbackError = (AuthErrorResponseBody | FeedbackNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllBookingTypesData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a bookingType and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllBookingTypesError = (AuthErrorResponseBody | BookingTypeNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateBookingTypeData = {
    /**
     * - The posted body object, containing the creation attributes of BookingTypeModel
     */
    body: BookingTypeCreateRequest;
};
export type CreateBookingTypeError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetBookingTypeData = {
    path: {
        /**
         * - The identifier of the bookingType to get
         */
        id: AppModelIdT;
    };
};
export type GetBookingTypeError = (AuthErrorResponseBody | BookingTypeNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateBookingTypeData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of BookingTypeModel
     */
    body: BookingTypeUpdateRequest;
    path: {
        /**
         * - The identifier of the bookingType to update
         */
        id: AppModelIdT;
    };
};
export type UpdateBookingTypeError = (AuthErrorResponseBody | BookingTypeNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteBookingTypeData = {
    path: {
        /**
         * - The identifier of the bookingType to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the bookingType will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteBookingTypeError = (AuthErrorResponseBody | BookingTypeNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllBookingsData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a booking and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllBookingsError = (AuthErrorResponseBody | BookingNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateBookingData = {
    /**
     * - The posted body object, containing the creation attributes of BookingModel
     */
    body: BookingCreateRequest;
};
export type CreateBookingError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetBookingData = {
    path: {
        /**
         * - The identifier of the booking to get
         */
        id: AppModelIdT;
    };
};
export type GetBookingError = (AuthErrorResponseBody | BookingNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateBookingData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of BookingModel
     */
    body: BookingUpdateRequest;
    path: {
        /**
         * - The identifier of the booking to update
         */
        id: AppModelIdT;
    };
};
export type UpdateBookingError = (AuthErrorResponseBody | BookingNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteBookingData = {
    path: {
        /**
         * - The identifier of the booking to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the booking will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteBookingError = (AuthErrorResponseBody | BookingNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllBlogsData = {
    query?: {
        /**
         * - Stringified JSON where the keys represent a property of a blog and values represent a text based filter for the property
         */
        filters?: string;
        /**
         * - Retrieve up to this many records
         */
        limit?: number;
        /**
         * - Retrieve records starting from this offset
         */
        offset?: number;
        /**
         * - Order records by this attribute
         */
        orderBy?: OrderByFieldValues;
    };
};
export type GetAllBlogsError = (AuthErrorResponseBody | BlogNotFoundResponseBody | ValidationErrorResponseBody);
export type CreateBlogData = {
    /**
     * - The posted body object, containing the creation attributes of BlogModel
     */
    body: BlogCreateRequest;
};
export type CreateBlogError = (AuthErrorResponseBody | ValidationErrorResponseBody);
export type GetBlogData = {
    path: {
        /**
         * - The identifier of the blog to get
         */
        id: AppModelIdT;
    };
};
export type GetBlogError = (AuthErrorResponseBody | BlogNotFoundResponseBody | ValidationErrorResponseBody);
export type UpdateBlogData = {
    /**
     * - The posted body object, containing some or all modifiable attributes of BlogModel
     */
    body: BlogUpdateRequest;
    path: {
        /**
         * - The identifier of the blog to update
         */
        id: AppModelIdT;
    };
};
export type UpdateBlogError = (AuthErrorResponseBody | BlogNotFoundResponseBody | ValidationErrorResponseBody);
export type DeleteBlogData = {
    path: {
        /**
         * - The identifier of the blog to delete
         */
        id: AppModelIdT;
    };
    query?: {
        /**
         * - If true the blog will actually be deleted from the database rather than a soft delete (handled by sequelize)
         */
        force?: boolean;
    };
};
export type DeleteBlogError = (AuthErrorResponseBody | BlogNotFoundResponseBody | ValidationErrorResponseBody);
export type GetAllUsersResponseTransformer = (data: any) => Promise<GetAllUsersResponse>;
export type UserReadManyResponseModelResponseTransformer = (data: any) => GetAllUsersResponse;
export type DataResponseBody_Array_ReadResponseContent_UserModelDTO_password_never___User_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllUsersResponse;
export type Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer: Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_UserModelDTO_password_never___User_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_UserModelDTO_password_never___User_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const UserReadManyResponseModelResponseTransformer: UserReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_UserModelDTO_password_never___User_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllUsersResponseTransformer: GetAllUsersResponseTransformer = async (data) => {
    UserReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateUserResponseTransformer = (data: any) => Promise<CreateUserResponse>;
export type UserCreateResponseModelResponseTransformer = (data: any) => CreateUserResponse;
export type DataResponseBody_CreateResponseContent_UserModelDTO_password_never__User_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateUserResponse;
export type Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer: Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_UserModelDTO_password_never__User_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_UserModelDTO_password_never__User_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_password_or_CreateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const UserCreateResponseModelResponseTransformer: UserCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_UserModelDTO_password_never__User_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateUserResponseTransformer: CreateUserResponseTransformer = async (data) => {
    UserCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetUserResponseTransformer = (data: any) => Promise<GetUserResponse>;
export type UserReadResponseModelResponseTransformer = (data: any) => GetUserResponse;
export type DataResponseBody_ReadResponseContent_UserModelDTO_password_never__User_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetUserResponse;
export const DataResponseBody_ReadResponseContent_UserModelDTO_password_never__User_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_UserModelDTO_password_never__User_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const UserReadResponseModelResponseTransformer: UserReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_UserModelDTO_password_never__User_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetUserResponseTransformer: GetUserResponseTransformer = async (data) => {
    UserReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateUserResponseTransformer = (data: any) => Promise<UpdateUserResponse>;
export type UserUpdateResponseModelResponseTransformer = (data: any) => UpdateUserResponse;
export type DataResponseBody_UpdateResponseContent_UserModelDTO_password_never__User_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateUserResponse;
export type Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer: Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_UserModelDTO_password_never__User_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_UserModelDTO_password_never__User_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_password_or_UpdateResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const UserUpdateResponseModelResponseTransformer: UserUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_UserModelDTO_password_never__User_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateUserResponseTransformer: UpdateUserResponseTransformer = async (data) => {
    UserUpdateResponseModelResponseTransformer(data);
    return data;
};
export type LoginResponseTransformer = (data: any) => Promise<LoginResponse>;
export type AuthLoginResponseModelResponseTransformer = (data: any) => LoginResponse;
export type OAuth2TokenResponseBodyModelResponseTransformer = (data: any) => LoginResponse;
export const OAuth2TokenResponseBodyModelResponseTransformer: OAuth2TokenResponseBodyModelResponseTransformer = data => {
    if (data?.user) {
        Omit_any_Extract_password_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer(data.user);
    }
    return data;
};
export const AuthLoginResponseModelResponseTransformer: AuthLoginResponseModelResponseTransformer = data => {
    if (data) {
        OAuth2TokenResponseBodyModelResponseTransformer(data);
    }
    return data;
};
export const LoginResponseTransformer: LoginResponseTransformer = async (data) => {
    AuthLoginResponseModelResponseTransformer(data);
    return data;
};
export type RegisterResponseTransformer = (data: any) => Promise<RegisterResponse>;
export type AuthRegisterResponseModelResponseTransformer = (data: any) => RegisterResponse;
export type DataResponseBody_ReadResponseContent_UserModelDTO_password_or_updatedAt__User_FoundResponseMessageT_ModelResponseTransformer = (data: any) => RegisterResponse;
export type Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer: Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_ReadResponseContent_UserModelDTO_password_or_updatedAt__User_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_UserModelDTO_password_or_updatedAt__User_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_password_or_updatedAt_or_ReadResponseContentOmittedKeysT_keyofUserModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const AuthRegisterResponseModelResponseTransformer: AuthRegisterResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_UserModelDTO_password_or_updatedAt__User_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const RegisterResponseTransformer: RegisterResponseTransformer = async (data) => {
    AuthRegisterResponseModelResponseTransformer(data);
    return data;
};
export type GetAllTagsResponseTransformer = (data: any) => Promise<GetAllTagsResponse>;
export type TagReadManyResponseModelResponseTransformer = (data: any) => GetAllTagsResponse;
export type DataResponseBody_Array_ReadResponseContent_TagModelDTO_never_never___Tag_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllTagsResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_TagModelDTO_never_never___Tag_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_TagModelDTO_never_never___Tag_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const TagReadManyResponseModelResponseTransformer: TagReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_TagModelDTO_never_never___Tag_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllTagsResponseTransformer: GetAllTagsResponseTransformer = async (data) => {
    TagReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateTagResponseTransformer = (data: any) => Promise<CreateTagResponse>;
export type TagCreateResponseModelResponseTransformer = (data: any) => CreateTagResponse;
export type DataResponseBody_CreateResponseContent_TagModelDTO_never_never__Tag_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateTagResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_TagModelDTO_never_never__Tag_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_TagModelDTO_never_never__Tag_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const TagCreateResponseModelResponseTransformer: TagCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_TagModelDTO_never_never__Tag_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateTagResponseTransformer: CreateTagResponseTransformer = async (data) => {
    TagCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetTagResponseTransformer = (data: any) => Promise<GetTagResponse>;
export type TagReadResponseModelResponseTransformer = (data: any) => GetTagResponse;
export type DataResponseBody_ReadResponseContent_TagModelDTO_never_never__Tag_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetTagResponse;
export const DataResponseBody_ReadResponseContent_TagModelDTO_never_never__Tag_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_TagModelDTO_never_never__Tag_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const TagReadResponseModelResponseTransformer: TagReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_TagModelDTO_never_never__Tag_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetTagResponseTransformer: GetTagResponseTransformer = async (data) => {
    TagReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateTagResponseTransformer = (data: any) => Promise<UpdateTagResponse>;
export type TagUpdateResponseModelResponseTransformer = (data: any) => UpdateTagResponse;
export type DataResponseBody_UpdateResponseContent_TagModelDTO_never_never__Tag_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateTagResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_TagModelDTO_never_never__Tag_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_TagModelDTO_never_never__Tag_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofTagModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const TagUpdateResponseModelResponseTransformer: TagUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_TagModelDTO_never_never__Tag_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateTagResponseTransformer: UpdateTagResponseTransformer = async (data) => {
    TagUpdateResponseModelResponseTransformer(data);
    return data;
};
export type GetAllRolesResponseTransformer = (data: any) => Promise<GetAllRolesResponse>;
export type RoleReadManyResponseModelResponseTransformer = (data: any) => GetAllRolesResponse;
export type DataResponseBody_Array_ReadResponseContent_RoleModelDTO_never_never___Role_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllRolesResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_RoleModelDTO_never_never___Role_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_RoleModelDTO_never_never___Role_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const RoleReadManyResponseModelResponseTransformer: RoleReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_RoleModelDTO_never_never___Role_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllRolesResponseTransformer: GetAllRolesResponseTransformer = async (data) => {
    RoleReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateRoleResponseTransformer = (data: any) => Promise<CreateRoleResponse>;
export type RoleCreateResponseModelResponseTransformer = (data: any) => CreateRoleResponse;
export type DataResponseBody_CreateResponseContent_RoleModelDTO_never_never__Role_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateRoleResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_RoleModelDTO_never_never__Role_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_RoleModelDTO_never_never__Role_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const RoleCreateResponseModelResponseTransformer: RoleCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_RoleModelDTO_never_never__Role_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateRoleResponseTransformer: CreateRoleResponseTransformer = async (data) => {
    RoleCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetRoleResponseTransformer = (data: any) => Promise<GetRoleResponse>;
export type RoleReadResponseModelResponseTransformer = (data: any) => GetRoleResponse;
export type DataResponseBody_ReadResponseContent_RoleModelDTO_never_never__Role_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetRoleResponse;
export const DataResponseBody_ReadResponseContent_RoleModelDTO_never_never__Role_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_RoleModelDTO_never_never__Role_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const RoleReadResponseModelResponseTransformer: RoleReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_RoleModelDTO_never_never__Role_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetRoleResponseTransformer: GetRoleResponseTransformer = async (data) => {
    RoleReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateRoleResponseTransformer = (data: any) => Promise<UpdateRoleResponse>;
export type RoleUpdateResponseModelResponseTransformer = (data: any) => UpdateRoleResponse;
export type DataResponseBody_UpdateResponseContent_RoleModelDTO_never_never__Role_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateRoleResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_RoleModelDTO_never_never__Role_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_RoleModelDTO_never_never__Role_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofRoleModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const RoleUpdateResponseModelResponseTransformer: RoleUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_RoleModelDTO_never_never__Role_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateRoleResponseTransformer: UpdateRoleResponseTransformer = async (data) => {
    RoleUpdateResponseModelResponseTransformer(data);
    return data;
};
export type GetAllFeedbacksResponseTransformer = (data: any) => Promise<GetAllFeedbacksResponse>;
export type FeedbackReadManyResponseModelResponseTransformer = (data: any) => GetAllFeedbacksResponse;
export type DataResponseBody_Array_ReadResponseContent_FeedbackModelDTO_never_never___Feedback_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllFeedbacksResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type UserModelDTOModelResponseTransformer = (data: any) => UserModelDTO;
export const UserModelDTOModelResponseTransformer: UserModelDTOModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.deletedAt) {
        data.deletedAt = new Date(data.deletedAt);
    }
    return data;
};
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_FeedbackModelDTO_never_never___Feedback_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_FeedbackModelDTO_never_never___Feedback_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const FeedbackReadManyResponseModelResponseTransformer: FeedbackReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_FeedbackModelDTO_never_never___Feedback_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllFeedbacksResponseTransformer: GetAllFeedbacksResponseTransformer = async (data) => {
    FeedbackReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateFeedbackResponseTransformer = (data: any) => Promise<CreateFeedbackResponse>;
export type FeedbackCreateResponseModelResponseTransformer = (data: any) => CreateFeedbackResponse;
export type DataResponseBody_CreateResponseContent_FeedbackModelDTO_never_never__Feedback_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateFeedbackResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_FeedbackModelDTO_never_never__Feedback_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_FeedbackModelDTO_never_never__Feedback_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const FeedbackCreateResponseModelResponseTransformer: FeedbackCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_FeedbackModelDTO_never_never__Feedback_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateFeedbackResponseTransformer: CreateFeedbackResponseTransformer = async (data) => {
    FeedbackCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetFeedbackResponseTransformer = (data: any) => Promise<GetFeedbackResponse>;
export type FeedbackReadResponseModelResponseTransformer = (data: any) => GetFeedbackResponse;
export type DataResponseBody_ReadResponseContent_FeedbackModelDTO_never_never__Feedback_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetFeedbackResponse;
export const DataResponseBody_ReadResponseContent_FeedbackModelDTO_never_never__Feedback_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_FeedbackModelDTO_never_never__Feedback_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const FeedbackReadResponseModelResponseTransformer: FeedbackReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_FeedbackModelDTO_never_never__Feedback_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetFeedbackResponseTransformer: GetFeedbackResponseTransformer = async (data) => {
    FeedbackReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateFeedbackResponseTransformer = (data: any) => Promise<UpdateFeedbackResponse>;
export type FeedbackUpdateResponseModelResponseTransformer = (data: any) => UpdateFeedbackResponse;
export type DataResponseBody_UpdateResponseContent_FeedbackModelDTO_never_never__Feedback_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateFeedbackResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_FeedbackModelDTO_never_never__Feedback_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_FeedbackModelDTO_never_never__Feedback_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofFeedbackModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const FeedbackUpdateResponseModelResponseTransformer: FeedbackUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_FeedbackModelDTO_never_never__Feedback_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateFeedbackResponseTransformer: UpdateFeedbackResponseTransformer = async (data) => {
    FeedbackUpdateResponseModelResponseTransformer(data);
    return data;
};
export type GetAllBookingTypesResponseTransformer = (data: any) => Promise<GetAllBookingTypesResponse>;
export type BookingTypeReadManyResponseModelResponseTransformer = (data: any) => GetAllBookingTypesResponse;
export type DataResponseBody_Array_ReadResponseContent_BookingTypeModelDTO_never_never___BookingType_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllBookingTypesResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_BookingTypeModelDTO_never_never___BookingType_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_BookingTypeModelDTO_never_never___BookingType_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const BookingTypeReadManyResponseModelResponseTransformer: BookingTypeReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_BookingTypeModelDTO_never_never___BookingType_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllBookingTypesResponseTransformer: GetAllBookingTypesResponseTransformer = async (data) => {
    BookingTypeReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateBookingTypeResponseTransformer = (data: any) => Promise<CreateBookingTypeResponse>;
export type BookingTypeCreateResponseModelResponseTransformer = (data: any) => CreateBookingTypeResponse;
export type DataResponseBody_CreateResponseContent_BookingTypeModelDTO_never_never__BookingType_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateBookingTypeResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_BookingTypeModelDTO_never_never__BookingType_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_BookingTypeModelDTO_never_never__BookingType_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingTypeCreateResponseModelResponseTransformer: BookingTypeCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_BookingTypeModelDTO_never_never__BookingType_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateBookingTypeResponseTransformer: CreateBookingTypeResponseTransformer = async (data) => {
    BookingTypeCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetBookingTypeResponseTransformer = (data: any) => Promise<GetBookingTypeResponse>;
export type BookingTypeReadResponseModelResponseTransformer = (data: any) => GetBookingTypeResponse;
export type DataResponseBody_ReadResponseContent_BookingTypeModelDTO_never_never__BookingType_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetBookingTypeResponse;
export const DataResponseBody_ReadResponseContent_BookingTypeModelDTO_never_never__BookingType_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_BookingTypeModelDTO_never_never__BookingType_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingTypeReadResponseModelResponseTransformer: BookingTypeReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_BookingTypeModelDTO_never_never__BookingType_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetBookingTypeResponseTransformer: GetBookingTypeResponseTransformer = async (data) => {
    BookingTypeReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateBookingTypeResponseTransformer = (data: any) => Promise<UpdateBookingTypeResponse>;
export type BookingTypeUpdateResponseModelResponseTransformer = (data: any) => UpdateBookingTypeResponse;
export type DataResponseBody_UpdateResponseContent_BookingTypeModelDTO_never_never__BookingType_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateBookingTypeResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_BookingTypeModelDTO_never_never__BookingType_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_BookingTypeModelDTO_never_never__BookingType_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingTypeModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingTypeUpdateResponseModelResponseTransformer: BookingTypeUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_BookingTypeModelDTO_never_never__BookingType_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateBookingTypeResponseTransformer: UpdateBookingTypeResponseTransformer = async (data) => {
    BookingTypeUpdateResponseModelResponseTransformer(data);
    return data;
};
export type GetAllBookingsResponseTransformer = (data: any) => Promise<GetAllBookingsResponse>;
export type BookingReadManyResponseModelResponseTransformer = (data: any) => GetAllBookingsResponse;
export type DataResponseBody_Array_ReadResponseContent_BookingModelDTO_never_never___Booking_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllBookingsResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type BookingTypeModelDTOModelResponseTransformer = (data: any) => BookingTypeModelDTO;
export const BookingTypeModelDTOModelResponseTransformer: BookingTypeModelDTOModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.deletedAt) {
        data.deletedAt = new Date(data.deletedAt);
    }
    return data;
};
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.bookingDate) {
        data.bookingDate = new Date(data.bookingDate);
    }
    if (data?.bookingType) {
        BookingTypeModelDTOModelResponseTransformer(data.bookingType);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_BookingModelDTO_never_never___Booking_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_BookingModelDTO_never_never___Booking_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const BookingReadManyResponseModelResponseTransformer: BookingReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_BookingModelDTO_never_never___Booking_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllBookingsResponseTransformer: GetAllBookingsResponseTransformer = async (data) => {
    BookingReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateBookingResponseTransformer = (data: any) => Promise<CreateBookingResponse>;
export type BookingCreateResponseModelResponseTransformer = (data: any) => CreateBookingResponse;
export type DataResponseBody_CreateResponseContent_BookingModelDTO_never_never__Booking_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateBookingResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.bookingDate) {
        data.bookingDate = new Date(data.bookingDate);
    }
    if (data?.bookingType) {
        BookingTypeModelDTOModelResponseTransformer(data.bookingType);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_BookingModelDTO_never_never__Booking_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_BookingModelDTO_never_never__Booking_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingCreateResponseModelResponseTransformer: BookingCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_BookingModelDTO_never_never__Booking_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateBookingResponseTransformer: CreateBookingResponseTransformer = async (data) => {
    BookingCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetBookingResponseTransformer = (data: any) => Promise<GetBookingResponse>;
export type BookingReadResponseModelResponseTransformer = (data: any) => GetBookingResponse;
export type DataResponseBody_ReadResponseContent_BookingModelDTO_never_never__Booking_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetBookingResponse;
export const DataResponseBody_ReadResponseContent_BookingModelDTO_never_never__Booking_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_BookingModelDTO_never_never__Booking_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingReadResponseModelResponseTransformer: BookingReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_BookingModelDTO_never_never__Booking_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetBookingResponseTransformer: GetBookingResponseTransformer = async (data) => {
    BookingReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateBookingResponseTransformer = (data: any) => Promise<UpdateBookingResponse>;
export type BookingUpdateResponseModelResponseTransformer = (data: any) => UpdateBookingResponse;
export type DataResponseBody_UpdateResponseContent_BookingModelDTO_never_never__Booking_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateBookingResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.bookingDate) {
        data.bookingDate = new Date(data.bookingDate);
    }
    if (data?.bookingType) {
        BookingTypeModelDTOModelResponseTransformer(data.bookingType);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_BookingModelDTO_never_never__Booking_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_BookingModelDTO_never_never__Booking_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBookingModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BookingUpdateResponseModelResponseTransformer: BookingUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_BookingModelDTO_never_never__Booking_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateBookingResponseTransformer: UpdateBookingResponseTransformer = async (data) => {
    BookingUpdateResponseModelResponseTransformer(data);
    return data;
};
export type GetAllBlogsResponseTransformer = (data: any) => Promise<GetAllBlogsResponse>;
export type BlogReadManyResponseModelResponseTransformer = (data: any) => GetAllBlogsResponse;
export type DataResponseBody_Array_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate___Blog_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetAllBlogsResponse;
export type Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type TagModelDTOModelResponseTransformer = (data: any) => TagModelDTO;
export const TagModelDTOModelResponseTransformer: TagModelDTOModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.deletedAt) {
        data.deletedAt = new Date(data.deletedAt);
    }
    return data;
};
export const Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.publishedDate) {
        data.publishedDate = new Date(data.publishedDate);
    }
    if (Array.isArray(data?.tags)) {
        data.tags.forEach(TagModelDTOModelResponseTransformer);
    }
    return data;
};
export const Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_Array_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate___Blog_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_Array_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate___Blog_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer);
    }
    return data;
};
export const BlogReadManyResponseModelResponseTransformer: BlogReadManyResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_Array_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate___Blog_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetAllBlogsResponseTransformer: GetAllBlogsResponseTransformer = async (data) => {
    BlogReadManyResponseModelResponseTransformer(data);
    return data;
};
export type CreateBlogResponseTransformer = (data: any) => Promise<CreateBlogResponse>;
export type BlogCreateResponseModelResponseTransformer = (data: any) => CreateBlogResponse;
export type DataResponseBody_CreateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_CreatedResponseMessageT_ModelResponseTransformer = (data: any) => CreateBlogResponse;
export type Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.publishedDate) {
        data.publishedDate = new Date(data.publishedDate);
    }
    if (Array.isArray(data?.tags)) {
        data.tags.forEach(TagModelDTOModelResponseTransformer);
    }
    return data;
};
export const Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_CreateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_CreatedResponseMessageT_ModelResponseTransformer: DataResponseBody_CreateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_CreatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_CreateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BlogCreateResponseModelResponseTransformer: BlogCreateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_CreateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_CreatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const CreateBlogResponseTransformer: CreateBlogResponseTransformer = async (data) => {
    BlogCreateResponseModelResponseTransformer(data);
    return data;
};
export type GetBlogResponseTransformer = (data: any) => Promise<GetBlogResponse>;
export type BlogReadResponseModelResponseTransformer = (data: any) => GetBlogResponse;
export type DataResponseBody_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_FoundResponseMessageT_ModelResponseTransformer = (data: any) => GetBlogResponse;
export const DataResponseBody_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_FoundResponseMessageT_ModelResponseTransformer: DataResponseBody_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_FoundResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_ReadResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BlogReadResponseModelResponseTransformer: BlogReadResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_ReadResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_FoundResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const GetBlogResponseTransformer: GetBlogResponseTransformer = async (data) => {
    BlogReadResponseModelResponseTransformer(data);
    return data;
};
export type UpdateBlogResponseTransformer = (data: any) => Promise<UpdateBlogResponse>;
export type BlogUpdateResponseModelResponseTransformer = (data: any) => UpdateBlogResponse;
export type DataResponseBody_UpdateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_UpdatedResponseMessageT_ModelResponseTransformer = (data: any) => UpdateBlogResponse;
export type Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export type Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = (data: any) => Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__;
export const Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer: Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer = data => {
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.user) {
        UserModelDTOModelResponseTransformer(data.user);
    }
    if (data?.publishedDate) {
        data.publishedDate = new Date(data.publishedDate);
    }
    if (Array.isArray(data?.tags)) {
        data.tags.forEach(TagModelDTOModelResponseTransformer);
    }
    return data;
};
export const Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer: Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer = data => {
    if (data) {
        Pick_any_Exclude_keyofany_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO___ModelResponseTransformer(data);
    }
    return data;
};
export const DataResponseBody_UpdateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_UpdatedResponseMessageT_ModelResponseTransformer: DataResponseBody_UpdateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_UpdatedResponseMessageT_ModelResponseTransformer = data => {
    if (data?.data) {
        Omit_any_Extract_never_or_UpdateResponseContentOmittedKeysT_keyofBlogModelDTO__ModelResponseTransformer(data.data);
    }
    return data;
};
export const BlogUpdateResponseModelResponseTransformer: BlogUpdateResponseModelResponseTransformer = data => {
    if (data) {
        DataResponseBody_UpdateResponseContent_BlogModelDTO_never_imageURL_or_publishedDate__Blog_UpdatedResponseMessageT_ModelResponseTransformer(data);
    }
    return data;
};
export const UpdateBlogResponseTransformer: UpdateBlogResponseTransformer = async (data) => {
    BlogUpdateResponseModelResponseTransformer(data);
    return data;
};
